if ("undefined" == typeof(ovl_cardbookFormatMails)) {	var ovl_cardbookFormatMails = {		initialized : false,		getCardbookDisplayNameFromEmail: function(aEmail, aDefaultDisplay) {			Components.utils.import("chrome://cardbook/content/cardbookRepository.js");			if (aEmail != null && aEmail !== undefined && aEmail != "") {				var myTestString = aEmail.toLowerCase();				for (var i = 0; i < cardbookRepository.cardbookAccounts.length; i++) {					if (cardbookRepository.cardbookAccounts[i][1] && cardbookRepository.cardbookAccounts[i][6]) {						var myDirPrefId = cardbookRepository.cardbookAccounts[i][4];						if (cardbookRepository.cardbookCardEmails[myDirPrefId]) {							for (var j = 0; j < cardbookRepository.cardbookCardEmails[myDirPrefId].length; j++) {								if (cardbookRepository.cardbookCardEmails[myDirPrefId][j][0] == myTestString) {									var myCardId = cardbookRepository.cardbookCardEmails[myDirPrefId][j][1];									return cardbookRepository.cardbookCards[myCardId].fn;								}							}						}					}				}			}			if (aDefaultDisplay != null && aDefaultDisplay !== undefined && aDefaultDisplay != "") {				return aDefaultDisplay;			} else {				return aEmail;			}		},		getOthersDisplayNameFromEmail: function(aEmail, aDefaultDisplay) {			if (aEmail != null && aEmail !== undefined && aEmail != "") {				var myTestString = aEmail.toLowerCase();				var contactManager = Components.classes["@mozilla.org/abmanager;1"].getService(Components.interfaces.nsIAbManager);				var contacts = contactManager.directories;				while ( contacts.hasMoreElements() ) {					var contact = contacts.getNext().QueryInterface(Components.interfaces.nsIAbDirectory);					if (contact.dirPrefId != "ldap_2.servers.history") {						var abCardsEnumerator = contact.childCards;						while (abCardsEnumerator.hasMoreElements()) {							var abCard = abCardsEnumerator.getNext();							abCard = abCard.QueryInterface(Components.interfaces.nsIAbCard);							var myName = abCard.getProperty("DisplayName","");							var myEmail = abCard.getProperty("PrimaryEmail","").replace(/</g,"").replace(/>/g,"").replace(/\\/g,"").replace(/\"/g,"").toLowerCase();							if (myEmail == myTestString) {								return myName;							}						}					}				}			}			if (aDefaultDisplay != null && aDefaultDisplay !== undefined && aDefaultDisplay != "") {				return aDefaultDisplay;			} else {				return aEmail;			}		},		getDisplayNameColumn: function(aEmails) {			Components.utils.import("chrome://cardbook/content/cardbookRepository.js");			Components.utils.import("resource:///modules/jsmime.jsm");			cardbookRepository.jsInclude(["chrome://cardbook/content/cardbookUtils.js"]);			var decodedSender = jsmime.headerparser.decodeRFC2047Words(aEmails);			listOfEmails = cardbookUtils.getDisplayNameAndEmail(decodedSender);			var prefs = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);			var showCondensedAddresses = prefs.getBoolPref("mail.showCondensedAddresses");			var exclusive = prefs.getBoolPref("extensions.cardbook.exclusive");			var results = [];			for (var i = 0; i < listOfEmails.length; i++) {				if (showCondensedAddresses) {					if (exclusive) {						results.push(ovl_cardbookFormatMails.getCardbookDisplayNameFromEmail(listOfEmails[i][1], listOfEmails[i][0]));					} else {						var displayName = ovl_cardbookFormatMails.getOthersDisplayNameFromEmail(listOfEmails[i][1], listOfEmails[i][0]);						results.push(ovl_cardbookFormatMails.getCardbookDisplayNameFromEmail(listOfEmails[i][1], displayName));					}				} else {					if (listOfEmails[i][0] != null && listOfEmails[i][0] !== undefined && listOfEmails[i][0] != "") {						results.push(listOfEmails[i][0]);					} else {						results.push(listOfEmails[i][1]);					}				}			}			return results.join(", ");		}	};};function cardbookSenderColumnHandler(colName) {	this.colName = colName;};cardbookSenderColumnHandler.prototype = {	getCellText: function(row, col) {		//get the message's header so that we can extract the date field		var hdr = gDBView.getMsgHdrAt(row);		if (this.colName == "senderCol") {			return ovl_cardbookFormatMails.getDisplayNameColumn(hdr.getStringProperty("sender"));		} else if (this.colName == "recipientCol") {			return ovl_cardbookFormatMails.getDisplayNameColumn(hdr.getStringProperty("recipients"));		}	},	getSortStringForRow: function(hdr) {return ovl_cardbookFormatMails.getDisplayNameColumn(hdr.getStringProperty("sender"));},	isString:            function() {return true;},		getCellProperties:   function(row, col, props){},	getRowProperties:    function(row, props){},	getImageSrc:         function(row, col) {return null;},	getSortLongForRow:   function(hdr) {return ovl_cardbookFormatMails.getDisplayNameColumn(hdr.getStringProperty("sender"));}};ovl_cardbookFormatMails.createObserver = {	observe: function(aMsgFolder, aTopic, aData) {  		gDBView.addColumnHandler("senderCol", new cardbookSenderColumnHandler("senderCol"));		gDBView.addColumnHandler("recipientCol", new cardbookSenderColumnHandler("recipientCol"));	}};ovl_cardbookFormatMails.addObserver = function() {	var ObserverService = Components.classes["@mozilla.org/observer-service;1"].getService(Components.interfaces.nsIObserverService);	ObserverService.addObserver(ovl_cardbookFormatMails.createObserver, "MsgCreateDBView", false);};// for the displayed name of emails columnswindow.addEventListener("load", ovl_cardbookFormatMails.addObserver, false);// for the displayed name of emails// FormatDisplayName(function() {	// Keep a reference to the original function.	var _original = FormatDisplayName;		// Override a function.	FormatDisplayName = function() {				// Execute some action afterwards.		var prefs = Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);		var exclusive = prefs.getBoolPref("extensions.cardbook.exclusive");		if (exclusive) {			var showCondensedAddresses = prefs.getBoolPref("mail.showCondensedAddresses");			if (showCondensedAddresses) {				return ovl_cardbookFormatMails.getCardbookDisplayNameFromEmail(arguments[0],arguments[1]);			} else {				// Execute original function.				var rv = _original.apply(null, arguments);			}		} else {			// Execute original function.			var rv = _original.apply(null, arguments);			return ovl_cardbookFormatMails.getCardbookDisplayNameFromEmail(arguments[0],rv);		}				// return the original result		return rv;	};})();